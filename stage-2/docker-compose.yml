services:
  db:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: pgfaker-db:latest
    container_name: mybestie
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      ANALYST_NAMES: ${ANALYST_NAMES}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./sql/migrations:/docker-entrypoint-initdb.d/migrations
      - ./backups:/backups
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    env_file:
      - .env

  flyway:
    image: flyway/flyway:latest
    container_name: flyway_migrations
    depends_on:
      db:
        condition: service_healthy
    environment:
      FLYWAY_URL: jdbc:postgresql://db:5432/${DB_NAME}
      FLYWAY_USER: ${DB_USER}
      FLYWAY_PASSWORD: ${DB_PASSWORD}
      FLYWAY_LOCATIONS: filesystem:/flyway/sql
      FLYWAY_TARGET: ${MIGRATION_VERSION}
      FLYWAY_VALIDATE_ON_MIGRATE: "true"
      FLYWAY_OUT_OF_ORDER: "false"
    volumes:
      - ./sql/migrations:/flyway/sql
    command: migrate
    env_file:
      - .env

  seeder:
    build:
      context: ./seeder
    container_name: db_seeder
    depends_on:
      flyway:
        condition: service_completed_successfully
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SEED_COUNT: ${SEED_COUNT}
    volumes:
      - ./seeder:/app
    command: ["python", "-u", "main.py"]
    env_file:
      - .env

volumes:
  db_data: